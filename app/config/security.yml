parameters:
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap

security:
    encoders:
        %security_encoders_user% :
            algorithm: sha512
            encode_as_base64: false
            iterations: 1

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_SONATA_ADMIN, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH, ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT, ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT]

        SONATA:
            # if you are not using acl then this line must be uncommented
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT
            - ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
            #id: hwi_oauth.user.provider.fosub_bridge

    firewalls:
        # Disabling the security for the web debug toolbar, the profiler and Assetic.
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # This firewall is used to handle the admin login area
        # This part is handled by the Sonata User Bundle
        admin:
            pattern:      /admin(.*)
            context:        user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                remember_me: false
                default_target_path: sonata_admin_default
#            remember_me:
#                key: mellzamora_001
#                lifetime: 31536000
#                always_remember_me: true
#                remember_me_parameter: _remember_me
#                path: /admin
#                domain: ~
            logout:
                path:           /admin/logout
            anonymous:    true

        # This firewall is used to handle the public login area
        # This part is handled by the FOS User Bundle
        main:
            pattern:      .*
            context:      user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
#                success_handler: rz_user_security.component.authentication.handler.login_success_handler
#                failure_handler: rz_user_security.component.authentication.handler.login_failure_handler
#                remember_me: true
#            remember_me:
#                key: mellzamora_002
#                lifetime: 31536000
#                always_remember_me: true
#                remember_me_parameter: _remember_me
#                path: /
#                domain: ~
            oauth:
              provider:   fos_userbundle
              resource_owners:
                facebook:      /login/check-facebook
                twitter:       /login/check-twitter
                google:       /login/check-google
              login_path:        /login
              failure_path:      /login
              oauth_user_provider:
                service: hwi_oauth.user.provider.fosub_bridge
            logout:
              path: /logout
#              success_handler: rz_user_security.component.authentication.handler.logout_success_handler
#              handlers: [rz.user.component.authentication.handler.user_logout]
            anonymous:    true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # It also secures the shop checkout process
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/profile/, role: IS_AUTHENTICATED_FULLY }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
#    acl:
#        connection: default
